<div class="search-form">
  <!-- <h1>Find opportunities</h1> -->
  <form id="search-view" class="search-form" action="{{@root.request.url.pathname}}" method="GET">
    <input type="hidden" name="lat" value="{{@root.request.params.query.lat}}" id="location-lat" />
    <input type="hidden" name="lng" value="{{@root.request.params.query.lng}}" id="location-lng" />
    <input type="hidden" name="sort" value="{{@root.request.params.query.sort}}" id="default-sort" />
    <div class="b-padding">
      <div class="columns">
        <div class="column col-3 filter-age">
          <div class="form-group">
            <select class="form-select select-lg" id="age" name="age">
              {{#each (split "12,13,14,15,16,17,18" ",")}}
                <option value="{{this}}" {{#compare (default @root.request.params.query.age '18') this}}selected{{/compare}}>Available for age {{this}}+</option>
              {{/each}}
            </select>
          </div>
        </div>
        <div class="column col-4">
          <div class="input-group has-icon-left">
            {{{{raw}}}}
            <span class="form-icon far fa-map-marker-alt geo-lookup" tabindex="0" title="Find my location" data-component="TasksTrigger" data-TasksTrigger='geolocation'></span>
            {{{{/raw}}}}
            <input type="text" id="where-opportunities" name="location" class="form-input input-lg" value="{{@root.request.params.query.location}}" placeholder="Location" data-lpignore="true">
            <select class="form-select select-lg" id="distance" name="distance">
              {{#each (split "5,10,15,20,25,30,35,40,45,50" ",")}}
                <option value="{{this}}" {{#compare (default @root.request.params.query.distance "10") "===" this}}selected{{/compare}}>{{this}} miles</option>
              {{/each}}
            </select>
          </div>
        </div>
        <div class="column col-4">
          <div class="form-group">
            {{!-- <label for="what-opportunities" class="form-label">
              Keywords
            </label> --}}
            <input type="text" id="what-opportunities" name="keywords" class="form-input input-lg" value="{{@root.request.params.query.keywords}}" placeholder="Keywords" data-lpignore="true" data-typeahead='{
              "typeaheadOptions": {
                "highlight": true,
                "minlength": 0
              },
              "outputs": [
                {
                  "type": "element",
                  "options": {
                    "containerSelectorTemplate": "#search-terms",
                    "testSelectorTemplate": "#\{{dataset.name}}-\{{item.value}}",
                    "removeSelectorTemplate": "#remove-\{{dataset.name}}-\{{item.value}}",
                    "template": {{#blockStringify this~}}
                      <div class="chip" tabindex="0" id="\{{dataset.name}}-\{{item.value}}">
                        <div class="">\{{item.other}}</div>
                        <input type="hidden" name="\{{dataset.name}}[]" value="\{{item.value}}">
                        <i class="far fa-times-circle" tabindex="0" role="button" id="remove-\{{dataset.name}}-\{{item.value}}"></i>
                      </div>
                    {{~/blockStringify}}
                  }
                },
                {
                  "type": "prop",
                  "options": {
                    "selectorTemplate": "#what-opportunities",
                    "valueTemplate": ""
                  }
                }
              ],
              "datasets": [
                {{#each @root.context.metaData.volunteeringTerms}}
                {{#each termGroups}}
                {
                  "name": {{{stringify ../key}}},
                  "templates": {
                  {{#compare (length ../termGroups) 1}}
                  "header": "<h3>{{{../label}}}</h3>"
                  {{else}}
                  "header": "<h3>{{{../label}}} &gt; {{{label}}}</h3>"
                  {{/compare}}
                },
                "display": "other",
                "items": [
                  {{#each terms}}
                  {
                    "label": {{{stringify (concat ../key ' ' textBag)}}},
                    "value": {{{stringify key}}},
                    "other": {{{stringify label}}}
                  }{{#unless @last}},{{/unless}}
                  {{/each}}
                ]
                }{{#unlessAll @last @../last}},{{/unlessAll}}
                {{/each}}
              {{/each}}
              ]
            }'>
          </div>
        </div>
        <div class="column col-1">
          <button type="submit" id="search-opportunities" class="btn btn-primary btn-lg">
            Search
            <!-- <span class="far fa-search" aria-hidden="true"></span> -->
          </button>
        </div>
      </div>
      <div class="columns">
        <div class="column col-12">
          <div id="search-terms" class="chip-set"></div>
        </div>
      </div>
    </div>
  </form>
</div>

{{{{raw}}}}
<script data-component-config="geolocation">
  {
    click: {
      tasks: [
        { name:"geolocation", type: "geolocation", config: {} },
        {
          type: "switch",
          config: {
            which: { __template: "{{~#if errors.geolocation~}}error{{~else~}}{{~#unless data.geolocation.coords~}}notFound{{~/unless~}}{{~/if~}}" },
            branches: {
              notFound: {
                halt: true,
                tasks: [
                  {
                    type: "run",
                    config: { "config": "console.log(`Geolocation not found`)" }
                  },
                  "empty-location-fields"
                ]
              },
              error: {
                halt: true,
                tasks: [
                  {
                    type: "run",
                    config: { "config": "console.log(`Geolocation error, probably denied access`, errors)" }
                  },
                  "empty-location-fields"
                ]
              }
            }
          }
        },
        {
          name: "storingRawCoords",
          type: "elementManipulator",
          config: {
            "#location-lat": { value: { __template: "{{data.geolocation.coords.latitude}}" } },
            "#location-lng": { value: { __template: "{{data.geolocation.coords.longitude}}" } },
            "#where-opportunities": { value: { __template: "{{data.geolocation.coords.latitude}}, {{data.geolocation.coords.longitude}}" } }
          }
        },
        {
          name: "place",
          type: "request",
          config: {
            url: {
              __template: "/place-lookup?lat={{data.geolocation.coords.latitude}}&lng={{data.geolocation.coords.longitude}}"
            }
          }
        },
        {
          type: "switch",
          config: {
            which: {
              __template: "{{#if errors.place}}requestError{{else}}{{#if data.place.error}}lookupError{{/if}}{{/if}}"
            },
            branches: {
              requestError: {
                tasks: [
                  {
                    type: "run",
                    config: { "config": "console.log(`Problem executing request`, data, errors)" }
                  },
                  "empty-location-fields"
                ]
              },
              lookupError: {
                tasks: [
                  {
                    type: "run",
                    config: { "config": "console.log(`Problem getting place name`, data, errors)" }
                  },
                  "empty-location-fields"
                ]
              },
              default: {
                tasks: [
                  {
                    type: "elementManipulator",
                    config: {
                      "#where-opportunities": { value: { __template: "{{data.place.place}}" } }
                    }
                  }
                ]
              }
            }
          }
        }
      ]
    }
  }
</script>

<script data-task="empty-location-fields" type="javascript/blocked">
  {
    name: "emptyLocationFields",
    type: "elementManipulator",
    config: {
      "#location-lat": { value: "" },
      "#location-lng": { value: "" },
      "#where-opportunities": { value: "" }
    }
  }
</script>
{{{{/raw}}}}